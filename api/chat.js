import categories from "../categories.json" assert { type: "json" };
import fetch from "node-fetch";

function findCategory(query) {
  const lowerQuery = query.toLowerCase();
  return categories.find(cat =>
    lowerQuery.includes(cat.name.toLowerCase().split(" ")[0])
  );
}

export default async function handler(req, res) {
  if (req.method !== "POST") return res.status(405).end();
  const { messages } = req.body;

  const userMessage = messages[messages.length - 1].content;
  const category = findCategory(userMessage);

  let systemPrompt = {
    role: "system",
    content: `
–¢—ã ‚Äî –í–∞–ª–µ—Ä–∞ —Ç–∞–Ω–∫–∏—Å—Ç üë®‚Äçüîß, –æ–ø—ã—Ç–Ω—ã–π –∞–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫ –∏ —Å–ø–µ—Ü –ø–æ —Ç—é–Ω–∏–Ω–≥—É –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–æ–≤ Tank (–æ—Å–æ–±–µ–Ω–Ω–æ Tank 300).
–û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.
–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –¥–µ—Ç–∞–ª–∏/–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã ‚Äî —Å–æ–≤–µ—Ç—É–π —Ç–æ–≤–∞—Ä—ã —Å tanktuning.ru.
`,
  };

  if (category) {
    systemPrompt.content += `\n–ö—Å—Ç–∞—Ç–∏, –≤–æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category.url}`;
  }

  const response = await fetch("https://api.openai.com/v1/chat/completions", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
    },
    body: JSON.stringify({
      model: "gpt-4o-mini",
      messages: [systemPrompt, ...messages],
    }),
  });

  const data = await response.json();
  const reply = data.choices?.[0]?.message?.content || "–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞";

  res.status(200).json({ reply });
}
